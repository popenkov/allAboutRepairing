"use strict";function _defineProperty(e,i,r){return i in e?Object.defineProperty(e,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[i]=r,e}document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".js-hamburger-btn"),i=document.querySelector(".js-hamburger-menu");e.addEventListener("click",(function(){var e;i.classList.toggle("hamburger-show");var r=new Swiper(".hamburger__left-menu",(_defineProperty(e={direction:"vertical",slidesPerView:1},"slidesPerView","auto"),_defineProperty(e,"allowTouchMove",!1),_defineProperty(e,"loop",!1),_defineProperty(e,"slideActiveClass","swiper-slide-active"),_defineProperty(e,"scrollbar",{el:".swiper-scrollbar",draggable:!0,hide:!0}),e)),o=document.querySelectorAll(".hamburger__left-menu .swiper-wrapper .swiper-slide");r.on("click",(function(e){o.forEach((function(e){e.classList.remove("swiper-slide-active")})),e.target.classList.add("swiper-slide-active")}));new Swiper(".hamburger__right-menu",{slidesPerView:1,spaceBetween:50,direction:"vertical",allowTouchMove:!1,loop:!1,thumbs:{swiper:r}})}));new Swiper(".main__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".main__slider-button-next",prevEl:".main__slider-button-prev"}}),new Swiper(".pop-works__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".pop-works__slider-button-next",prevEl:".pop-works__slider-button-prev"},breakpoints:{414:{slidesPerView:1,spaceBetween:0},1e3:{slidesPerView:3,spaceBetween:24},1440:{slidesPerView:3,spaceBetween:24}}}),new Swiper(".new-videos__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".new-videos__slider-button-next",prevEl:".new-videos__slider-button-prev"},breakpoints:{414:{slidesPerView:1.36,spaceBetween:24},1e3:{slidesPerView:4,spaceBetween:24}}});var r,o=document.body.clientWidth,t=document.querySelector(".pop-articles__items-swiper"),n=function(){console.log("sliderInit"),r=new Swiper(".pop-articles__items-swiper",{direction:"horizontal",loop:!0}),t.classList.remove("pop-articles--no-swiper")};o<415&&n();window.addEventListener("resize",(function(){var e=document.body.clientWidth;console.log(e),e<415?n():e>=415&&t.classList.contains("swiper-container-initialized")&&(console.log("swiperDestroy"),r.destroy(!0,!0),t.classList.add("pop-articles--no-swiper"))})),console.log(o);var s=document.querySelector(".header__location"),l=document.querySelector(".header__location-popup");s&&s.addEventListener("click",(function(e){e.preventDefault(),l.classList.toggle("header__location-popup--show")}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
