"use strict";function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".js-hamburger-btn"),t=document.querySelector(".js-hamburger-menu");e.addEventListener("click",(function(){var e;t.classList.toggle("hamburger-show");var o=new Swiper(".hamburger__left-menu",(_defineProperty(e={direction:"vertical",slidesPerView:1},"slidesPerView","auto"),_defineProperty(e,"allowTouchMove",!1),_defineProperty(e,"loop",!1),_defineProperty(e,"slideActiveClass","swiper-slide-active"),_defineProperty(e,"scrollbar",{el:".swiper-scrollbar",draggable:!0,hide:!0}),e)),r=document.querySelectorAll(".hamburger__left-menu .swiper-wrapper .swiper-slide");o.on("click",(function(e){r.forEach((function(e){e.classList.remove("swiper-slide-active")})),e.target.classList.add("swiper-slide-active")}));new Swiper(".hamburger__right-menu",{slidesPerView:1,spaceBetween:50,direction:"vertical",allowTouchMove:!1,loop:!1,thumbs:{swiper:o}})}));new Swiper(".main__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".main__slider-button-next",prevEl:".main__slider-button-prev"}}),new Swiper(".pop-works__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".pop-works__slider-button-next",prevEl:".pop-works__slider-button-prev"},breakpoints:{414:{slidesPerView:1,spaceBetween:0},1e3:{slidesPerView:3,spaceBetween:24},1440:{slidesPerView:3,spaceBetween:24}}}),new Swiper(".new-videos__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".new-videos__slider-button-next",prevEl:".new-videos__slider-button-prev"},breakpoints:{414:{slidesPerView:1.36,spaceBetween:24},1e3:{slidesPerView:4,spaceBetween:24}}});var o,r=document.body.clientWidth,n=document.querySelector(".pop-articles__items-swiper"),i=function(){console.log("sliderInit"),o=new Swiper(".pop-articles__items-swiper",{direction:"horizontal",loop:!0}),n.classList.remove("pop-articles--no-swiper")};r<415&&i();window.addEventListener("resize",(function(){var e=document.body.clientWidth;console.log(e),e<415?i():e>=415&&n.classList.contains("swiper-container-initialized")&&(console.log("swiperDestroy"),o.destroy(!0,!0),n.classList.add("pop-articles--no-swiper"))})),console.log(r);var l=document.querySelector(".header__location"),s=document.querySelector(".header__location-popup");l&&l.addEventListener("click",(function(e){e.preventDefault(),s.classList.toggle("header__location-popup--show")}));var c=document.querySelector(".header__hamburger-btn-mobile"),a=document.querySelector(".header__navigation-container");document.querySelector("main"),document.querySelector("body");c&&c.addEventListener("click",(function(e){e.preventDefault(),c.classList.toggle("change"),a.classList.toggle("show")}));var d=document.querySelectorAll(".popup-link"),p=document.querySelector("body"),u=document.querySelectorAll(".lock-padding"),w=!0;if(d.length>0)for(var v=function(e){var t=d[e];t.addEventListener("click",(function(e){var o=t.getAttribute("href").replace("#",""),r=document.getElementById(o);console.log(r),function(e){if(e&&w){var t=document.querySelector(".popup.open");t?_(t,!1):function(){var e=window.innerWidth-document.querySelector(".wrapper").clientWidth+"px";if(console.log(window.innerWidth),console.log(document.querySelector(".wrapper").offsetWidth),u.length>0)for(var t=0;t<u.length;t++){u[t].style.paddingRight=e}p.style.paddingRight=e,p.classList.add("lock"),w=!1,setTimeout((function(){w=!0}),800)}(),e.classList.add("open"),e.addEventListener("click",(function(e){e.target.closest(".popup__content")||_(e.target.closest(".popup"))}))}}(r),e.preventDefault()}))},g=0;g<d.length;g++)v(g);var m=document.querySelectorAll(".close-popup");if(m.length>0)for(var f=function(e){var t=m[e];t.addEventListener("click",(function(e){_(t.closest(".popup")),e.preventDefault()}))},h=0;h<m.length;h++)f(h);function _(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e.querySelector("form")&&e.querySelector("form").reset(),w&&(e.classList.remove("open"),t&&y())}function y(){setTimeout((function(){if(u.length>0)for(var e=0;e<u.length;e++){u[e].style.paddingRight="0px"}p.style.paddingRight="0px",p.classList.remove("lock")}),800),w=!1,setTimeout((function(){w=!0}),800)}document.addEventListener("keydown",(function(e){27==e.which&&_(document.querySelector(".popup.open"))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
