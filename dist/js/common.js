"use strict";document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".js-hamburger-btn"),t=document.querySelector(".js-hamburger-menu"),o=document.querySelector(".hamburger__back-btn-mobile");document.querySelector(".header__hamburger-btn-mobile.change");e.addEventListener("click",(function(){console.log("click"),t.classList.toggle("hamburger-show"),document.querySelector(".header-wrapper").classList.toggle("body__black-bg")})),o.addEventListener("click",(function(){console.log("click"),t.classList.remove("hamburger-show")})),function(e,t,o,n){var i=document.querySelectorAll(e),r=document.querySelector(o),s=document.querySelectorAll(n);function l(e){for(var t=e;t<s.length;t++)s[t].classList.remove("show"),s[t].classList.add("hide")}l(1),r.addEventListener("click",(function(o){var n,r=o.target;if(console.log(r,!!r.closest(e)),r.closest(t)||r.classList.contains(t))for(var c=0;c<i.length;c++)if(r==i[c]){console.log(i[c]),l(0),s[n=c].classList.contains("hide")&&(s[n].classList.remove("hide"),s[n].classList.add("show"));break}}))}(".hamburger__left-menu-item-link",".hamburger__left-menu-item",".hamburger__left-menu",".hamburger__right-menu-item");var n=document.querySelector(".header__location"),i=document.querySelector(".header__location-popup");n&&n.addEventListener("click",(function(e){e.preventDefault(),i.classList.toggle("header__location-popup--show")}));var r=document.querySelector(".header__hamburger-btn-mobile"),s=document.querySelector(".header__navigation-container");document.querySelector("main"),document.querySelector("body");r&&r.addEventListener("click",(function(e){e.preventDefault(),r.classList.toggle("change"),s.classList.toggle("show"),document.querySelector(".header-wrapper").classList.toggle("body__black-bg"),t.classList.remove("hamburger-show")})),window.addEventListener("resize",(function(){c>=u&&(s.classList.remove("show"),r.classList.remove("change"),document.querySelector(".header-wrapper").classList.remove("body__black-bg"))}));new Swiper(".main__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".main__slider-button-next",prevEl:".main__slider-button-prev"}}),new Swiper(".pop-works__slider-swiper",{direction:"horizontal",loop:!0,slidesPerView:3,spaceBetween:24,navigation:{nextEl:".pop-works__slider-button-next",prevEl:".pop-works__slider-button-prev"},breakpoints:{700:{slidesPerView:1,spaceBetween:0},1150:{slidesPerView:2,spaceBetween:24},1440:{slidesPerView:3,spaceBetween:24}}}),new Swiper(".new-videos__slider-swiper",{direction:"horizontal",loop:!0,slidesPerView:4,spaceBetween:24,loopAdditionalSlides:3,navigation:{nextEl:".new-videos__slider-button-next",prevEl:".new-videos__slider-button-prev"},breakpoints:{600:{slidesPerView:1.36,spaceBetween:24},800:{slidesPerView:2,spaceBetween:24},1150:{slidesPerView:3,spaceBetween:24}}});var l,c=document.body.clientWidth,a=document.querySelector(".pop-articles__items-swiper"),d=document.querySelector(".pop-articles__items"),u=769,p=function(){console.log("sliderInit"),l=new Swiper(".pop-articles__items-swiper",{direction:"horizontal",loop:!0,slidesPerView:1.35,spaceBetween:20,loopAdditionalSlides:3,breakpoints:{620:{slidesPerView:1.35,spaceBetween:20},768:{slidesPerView:2,spaceBetween:24}}}),a.classList.remove("pop-articles--no-swiper")};c<u&&!a.classList.contains("swiper-container-initialized")&&p();window.addEventListener("resize",(function(){var e=document.body.clientWidth;console.log(e),e<u&&!a.classList.contains("swiper-container-initialized")?p():e>=u&&a.classList.contains("swiper-container-initialized")&&(console.log("swiperDestroy",l),l.destroy(!1,!0),a.classList.add("pop-articles--no-swiper"),d.removeAttribute("style"),d.childNodes.forEach((function(e){return e.removeAttribute("style")})),d.style=" ")}));var m=document.querySelectorAll(".popup-link"),g=document.querySelector("body"),w=document.querySelectorAll(".lock-padding"),h=!0;if(m.length>0)for(var v=function(e){var t=m[e];t.addEventListener("click",(function(e){var o=t.getAttribute("href").replace("#",""),n=document.getElementById(o);console.log(n),function(e){if(e&&h){var t=document.querySelector(".popup.open");t?L(t,!1):function(){var e=window.innerWidth-document.querySelector(".wrapper").clientWidth+"px";if(console.log(window.innerWidth),console.log(document.querySelector(".wrapper").offsetWidth),w.length>0)for(var t=0;t<w.length;t++){w[t].style.paddingRight=e}g.style.paddingRight=e,g.classList.add("lock"),h=!1,setTimeout((function(){h=!0}),800)}(),e.classList.add("open"),e.addEventListener("click",(function(e){e.target.closest(".popup__content")||L(e.target.closest(".popup"))}))}}(n),e.preventDefault()}))},_=0;_<m.length;_++)v(_);var f=document.querySelectorAll(".close-popup");if(f.length>0)for(var b=function(e){var t=f[e];t.addEventListener("click",(function(e){L(t.closest(".popup")),e.preventDefault()}))},y=0;y<f.length;y++)b(y);function L(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e.querySelector("form")&&e.querySelector("form").reset(),h&&(e.classList.remove("open"),t&&S())}function S(){setTimeout((function(){if(w.length>0)for(var e=0;e<w.length;e++){w[e].style.paddingRight="0px"}g.style.paddingRight="0px",g.classList.remove("lock")}),800),h=!1,setTimeout((function(){h=!0}),800)}document.addEventListener("keydown",(function(e){27==e.which&&L(document.querySelector(".popup.open"))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
