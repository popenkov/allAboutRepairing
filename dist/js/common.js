"use strict";function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".js-hamburger-btn"),t=document.querySelector(".js-hamburger-menu");e.addEventListener("click",(function(){var e;t.classList.toggle("hamburger-show");var o=new Swiper(".hamburger__left-menu",(_defineProperty(e={direction:"vertical",slidesPerView:1},"slidesPerView","auto"),_defineProperty(e,"allowTouchMove",!1),_defineProperty(e,"loop",!1),_defineProperty(e,"slideActiveClass","swiper-slide-active"),_defineProperty(e,"scrollbar",{el:".swiper-scrollbar",draggable:!0,hide:!0}),e)),r=document.querySelectorAll(".hamburger__left-menu .swiper-wrapper .swiper-slide");o.on("click",(function(e){r.forEach((function(e){e.classList.remove("swiper-slide-active")})),e.target.classList.add("swiper-slide-active")}));new Swiper(".hamburger__right-menu",{slidesPerView:1,spaceBetween:50,direction:"vertical",allowTouchMove:!1,loop:!1,thumbs:{swiper:o}})}));new Swiper(".main__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".main__slider-button-next",prevEl:".main__slider-button-prev"}}),new Swiper(".pop-works__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".pop-works__slider-button-next",prevEl:".pop-works__slider-button-prev"},breakpoints:{414:{slidesPerView:1,spaceBetween:0},1e3:{slidesPerView:3,spaceBetween:24},1440:{slidesPerView:3,spaceBetween:24}}}),new Swiper(".new-videos__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".new-videos__slider-button-next",prevEl:".new-videos__slider-button-prev"},breakpoints:{414:{slidesPerView:1.36,spaceBetween:24},1e3:{slidesPerView:4,spaceBetween:24}}});var o,r=document.body.clientWidth,i=document.querySelector(".pop-articles__items-swiper"),n=function(){console.log("sliderInit"),o=new Swiper(".pop-articles__items-swiper",{direction:"horizontal",loop:!0}),i.classList.remove("pop-articles--no-swiper")};r<415&&n();window.addEventListener("resize",(function(){var e=document.body.clientWidth;console.log(e),e<415?n():e>=415&&i.classList.contains("swiper-container-initialized")&&(console.log("swiperDestroy"),o.destroy(!0,!0),i.classList.add("pop-articles--no-swiper"))})),console.log(r);var l=document.querySelector(".header__location"),s=document.querySelector(".header__location-popup");l&&l.addEventListener("click",(function(e){e.preventDefault(),s.classList.toggle("header__location-popup--show")}));var c=document.querySelector(".header__hamburger-btn-mobile");c&&c.addEventListener("click",(function(e){e.preventDefault(),s.classList.toggle("header__location-popup--show")}));var a=document.querySelectorAll(".popup-link"),d=document.querySelector("body"),p=document.querySelectorAll(".lock-padding"),u=!0;if(a.length>0)for(var w=function(e){var t=a[e];t.addEventListener("click",(function(e){var o=t.getAttribute("href").replace("#",""),r=document.getElementById(o);console.log(r),function(e){if(e&&u){var t=document.querySelector(".popup.open");t?h(t,!1):function(){var e=window.innerWidth-document.querySelector(".wrapper").clientWidth+"px";if(console.log(window.innerWidth),console.log(document.querySelector(".wrapper").offsetWidth),p.length>0)for(var t=0;t<p.length;t++){p[t].style.paddingRight=e}d.style.paddingRight=e,d.classList.add("lock"),u=!1,setTimeout((function(){u=!0}),800)}(),e.classList.add("open"),e.addEventListener("click",(function(e){e.target.closest(".popup__content")||h(e.target.closest(".popup"))}))}}(r),e.preventDefault()}))},v=0;v<a.length;v++)w(v);var f=document.querySelectorAll(".close-popup");if(f.length>0)for(var g=function(e){var t=f[e];t.addEventListener("click",(function(e){h(t.closest(".popup")),e.preventDefault()}))},m=0;m<f.length;m++)g(m);function h(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e.querySelector("form")&&e.querySelector("form").reset(),u&&(e.classList.remove("open"),t&&_())}function _(){setTimeout((function(){if(p.length>0)for(var e=0;e<p.length;e++){p[e].style.paddingRight="0px"}d.style.paddingRight="0px",d.classList.remove("lock")}),800),u=!1,setTimeout((function(){u=!0}),800)}document.addEventListener("keydown",(function(e){27==e.which&&h(document.querySelector(".popup.open"))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
