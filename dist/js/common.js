"use strict";document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelector(".js-hamburger-btn"),t=document.querySelector(".js-hamburger-menu");e.addEventListener("click",(function(){t.classList.toggle("hamburger-show")})),function(e,t,o,n){var i=document.querySelectorAll(e),r=document.querySelector(o),s=document.querySelectorAll(n);function l(e){for(var t=e;t<s.length;t++)s[t].classList.remove("show"),s[t].classList.add("hide")}l(1),r.addEventListener("click",(function(o){var n,r=o.target;if(console.log(r,!!r.closest(e)),r.closest(t)||r.classList.contains(t))for(var c=0;c<i.length;c++)if(r==i[c]){console.log(i[c]),l(0),s[n=c].classList.contains("hide")&&(s[n].classList.remove("hide"),s[n].classList.add("show"));break}}))}(".hamburger__left-menu-item-link",".hamburger__left-menu-item",".hamburger__left-menu",".hamburger__right-menu-item");new Swiper(".main__slider-swiper",{direction:"horizontal",loop:!0,navigation:{nextEl:".main__slider-button-next",prevEl:".main__slider-button-prev"}}),new Swiper(".pop-works__slider-swiper",{direction:"horizontal",loop:!0,slidesPerView:3,spaceBetween:24,navigation:{nextEl:".pop-works__slider-button-next",prevEl:".pop-works__slider-button-prev"},breakpoints:{700:{slidesPerView:1,spaceBetween:0},1150:{slidesPerView:2,spaceBetween:24},1440:{slidesPerView:3,spaceBetween:24}}}),new Swiper(".new-videos__slider-swiper",{direction:"horizontal",loop:!0,slidesPerView:4,spaceBetween:24,navigation:{nextEl:".new-videos__slider-button-next",prevEl:".new-videos__slider-button-prev"},breakpoints:{600:{slidesPerView:1.36,spaceBetween:24},800:{slidesPerView:2,spaceBetween:24},1150:{slidesPerView:3,spaceBetween:24}}});var o,n=document.body.clientWidth,i=document.querySelector(".pop-articles__items-swiper"),r=function(){console.log("sliderInit"),o=new Swiper(".pop-articles__items-swiper",{direction:"horizontal",loop:!0,slidesPerView:1.35,spaceBetween:20}),i.classList.remove("pop-articles--no-swiper")};n<769&&r();window.addEventListener("resize",(function(){var e=document.body.clientWidth;console.log(e),e<769?r():e>=769&&i.classList.contains("swiper-container-initialized")&&(console.log("swiperDestroy"),o.destroy(!0,!0),i.classList.add("pop-articles--no-swiper"))})),console.log(n);var s=document.querySelector(".header__location"),l=document.querySelector(".header__location-popup");s&&s.addEventListener("click",(function(e){e.preventDefault(),l.classList.toggle("header__location-popup--show")}));var c=document.querySelector(".header__hamburger-btn-mobile"),a=document.querySelector(".header__navigation-container");document.querySelector("main"),document.querySelector("body");c&&c.addEventListener("click",(function(e){e.preventDefault(),c.classList.toggle("change"),a.classList.toggle("show")}));var d=document.querySelectorAll(".popup-link"),u=document.querySelector("body"),p=document.querySelectorAll(".lock-padding"),m=!0;if(d.length>0)for(var g=function(e){var t=d[e];t.addEventListener("click",(function(e){var o=t.getAttribute("href").replace("#",""),n=document.getElementById(o);console.log(n),function(e){if(e&&m){var t=document.querySelector(".popup.open");t?_(t,!1):function(){var e=window.innerWidth-document.querySelector(".wrapper").clientWidth+"px";if(console.log(window.innerWidth),console.log(document.querySelector(".wrapper").offsetWidth),p.length>0)for(var t=0;t<p.length;t++){p[t].style.paddingRight=e}u.style.paddingRight=e,u.classList.add("lock"),m=!1,setTimeout((function(){m=!0}),800)}(),e.classList.add("open"),e.addEventListener("click",(function(e){e.target.closest(".popup__content")||_(e.target.closest(".popup"))}))}}(n),e.preventDefault()}))},w=0;w<d.length;w++)g(w);var v=document.querySelectorAll(".close-popup");if(v.length>0)for(var h=function(e){var t=v[e];t.addEventListener("click",(function(e){_(t.closest(".popup")),e.preventDefault()}))},f=0;f<v.length;f++)h(f);function _(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e.querySelector("form")&&e.querySelector("form").reset(),m&&(e.classList.remove("open"),t&&y())}function y(){setTimeout((function(){if(p.length>0)for(var e=0;e<p.length;e++){p[e].style.paddingRight="0px"}u.style.paddingRight="0px",u.classList.remove("lock")}),800),m=!1,setTimeout((function(){m=!0}),800)}document.addEventListener("keydown",(function(e){27==e.which&&_(document.querySelector(".popup.open"))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
